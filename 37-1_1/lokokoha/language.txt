D — язык программирования общего назначения, предназначенный для прикладного и системного программирования. Он является языком высокого уровня, но сохраняет возможности прямого взаимодействия с программным интерфейсом операционной системы и с оборудованием. D предназначен для написания средних и крупных систем с миллионами строк исходного кода, для ведения командной разработки. Язык D имеет C-подобный синтаксис, он лёгок в изучении, поддерживает многие возможности в помощь программисту, а также пригоден для проведения агрессивной оптимизации кода компилятором.
	К Главным преимуществам данного языка программирования можно отнести:
•	Дисциплинированность заголовочных файлов, #pragma once и т.п. Порядок файлов в проекте тоже не важен. 
•	Есть возможность ручного выделения памяти для низкой оптимизации программы.
 Язык D отличается очень продуманным, вменяемым дизайном и при этом не несет с собой кучу устаревшей/спорной идеологии на тему того что, например, публичные поля это плохо, надо делать свойства.
	Недостатками же языка являются:
•	Устаревшие средства разработки, старый и не интуитивный процесс дебагинга.
•	Компиляция только под Windows x32.
•	Малое количество стандартных библиотек, на данный момент их всего две Phobos и Tango.
•	Малая популярность языка, в связи с этим мало документации и уже готовых решений.
В целом данный язык программирования хорошая замена старому доброму с++.
D - это язык, который последовательно старается правильно действовать в пределах выбранных им ограничений, таких как доступ системного уровня к вычислительным ресурсам, высокая производительность и синтаксическая простота, к которой стремятся все произошедшие от С языки. Стараясь правильно действовать, D порой поступает традиционно - как другие языки, а порой ломает традиции с помощью свежего, инновационного решения. 
Иногда это приводило к пересмотру принципов, которым, казалось, D никогда не изменит. Например, большие фрагменты программного кода, а то и целые программы, могут быть написаны с помощью хорошо определенного, не допускающего ошибок памяти «безопасного подмножества» D. Ценой небольшого ограничения доступа на системном уровне приобретается огромное преимущество при отладке программ. 
D заинтересует вас, если для вас важны следующие аспекты: 
• Производительность. D - это язык для системного программирования. Его модель памяти, несмотря на сильную типизацию, совместима с моделью памяти С. Функции на D могут вызывать функции на С, а функции на С могут использовать функции D без каких-либо промежуточных преобразований. 
• Выразительность. D нельзя назвать небольшим, минималистичным языком, но его удельная мощность достаточно велика. Он позволяет определять наглядные, не требующие объяснений инструкции, точно моделирующие сложные реалии. 
• D одинаково эффективно помогает справляться и с короткими сценариями, и с большими программами, и для него отнюдь не редкость целый проект, органично вырастающий из простенького скрипта в единственном файле. 
• Параллельны е вычисления. Подход к параллельным вычислениям - несомненное отличие D от похожих языков, отражающее разрыв меж ду современными аппаратными решениями и архитектурой компьютеров прошлого. D покончил с проклятьем неявного разделения памяти (хотя и допускает статически проверенное, явно заданное разделение) и поощряет независимые потоки, которые «общаются» друг с другом посредством сообщений. 
• Обобщенное программирование. Идея обобщенного кода, манипулирующего другим кодом, была впервые реализована в мощных макросах Лиспа, затем в шаблонах С++, обобщенных классах Java и схожих конструкциях других языков. D также предлагает невероятно мощные механизмы обобщенного и порождающего программирования. 
• Эклектизм. D подразумевает, что каждая парадигма программирования ориентирована на свою задачу разработки. Поэтому он предполагает высоко интегрированный объединенный стиль программирования, а не Единственно Верный Подход. 
• D старается всегда следовать своим принципам устройства языка. Иногда они идут вразрез с соображениями сложности реализации и трудностей использования и, главное, с человеческой природой, которая не всегда находит скрытую логику здравой и интуитивно понятной. В таких случаях все языки полагаются на собственное бесконечно субъективное понимание баланса, гибкости и - особенно - хорошего вкуса. На мой взгляд, D как минимум неплохо смотрится на фоне других языков, разработчикам которых приходилось принимать решения того ж е плана.
